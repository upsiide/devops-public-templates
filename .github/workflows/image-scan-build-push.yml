name: Docker Image Scan, Build, and Push

on:
  workflow_dispatch:

jobs:
  image-scan:
    permissions:
        id-token: write
        contents: read
        actions: read
        checks: read
        deployments: read
        issues: none
        discussions: none
        packages: none
        pages: none
        pull-requests: none
        repository-projects: none
        security-events: none
        statuses: write

    name: Docker Image Full Scan
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Dockerfile Linting
        uses: hadolint/hadolint-action@v2.0.0
        with:
          dockerfile: ./Dockerfile
          failure-threshold: error
      - name: Dockerfile Linting
        uses: hadolint/hadolint-action@v2.0.0
        with:
          dockerfile: ./Dockerfile
          failure-threshold: error
      - name: Building the Image locally
        run: docker build . --tag pipeline-image
      - name: Image Vulnerability Scan
        uses: hands-lab/dockle-action@v1
        with:
          image: pipeline-image
          exit-code: '1'
          exit-levl: 'FATAL'
      - name: Image Effieciency Scan
        uses: yuichielectric/dive-action@0.0.4
        with:
          image: pipeline-image
          config-file: ${{ github.workspace }}/.effeciency-benchmark.yml

  build-push:
    permissions:
        id-token: write
        contents: read
        actions: read
        checks: read
        deployments: read
        issues: none
        discussions: none
        packages: none
        pages: none
        pull-requests: none
        repository-projects: none
        security-events: none
        statuses: write

    name: Docker Image Full Scan
    runs-on: ubuntu-latest
    needs: image-scan

    steps:
    - uses: actions/checkout@v3
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        role-to-assume: ${{ secrets.PIPELINE_ROLE_ARN }}
        aws-region: ${{ secrets.AWS_REGION }}
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
    - name: Build and push
      uses: docker/build-push-action@v3
      with:
        context: .
        push: true
        tags: "${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.IMAGE_NAME }}:${{ github.run_id }}"
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: "${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.IMAGE_NAME }}:${{ github.run_id }}"
        exit-code: '1'
        ignore-unfixed: true
        vuln-type: 'os,library'
        severity: 'CRITICAL,HIGH'