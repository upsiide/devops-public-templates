name: Docker Build + Trivy

on:
  workflow_call:
    inputs:
      gh_deploy_env:
        required: true
        type: string
      trivy_severity:
        default: 'CRITICAL,HIGH'
        required: false
        type: string

    secrets:
      image_name:
        required: true
      aws_region:
        required: true
      pipeline_role_arn:
        required: true
      ecr_base_image_registry:
        required: true
      ecr_final_image_registry:
        required: true

jobs:
  image-scan:
    permissions:
        id-token: write
        contents: read
        actions: read
        checks: read
        deployments: read
        issues: none
        discussions: none
        packages: none
        pages: none
        pull-requests: none
        repository-projects: none
        security-events: none
        statuses: write

    name: Docker Image Full Scan
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Dockerfile Linting
        uses: hadolint/hadolint-action@v2.0.0
        with:
          dockerfile: ./Dockerfile
          failure-threshold: error
      - name: Dockerfile Linting
        uses: hadolint/hadolint-action@v2.0.0
        with:
          dockerfile: ./Dockerfile
          failure-threshold: error
      - name: Building the Image locally
        run: docker build . --tag pipeline-image
      - name: Image Vulnerability Scan
        uses: hands-lab/dockle-action@v1
        with:
          image: pipeline-image
          exit-code: '0'
          exit-levl: 'FATAL'
      - name: Image Effieciency Scan
        uses: yuichielectric/dive-action@0.0.4
        with:
          image: pipeline-image
          config-file: ${{ github.workspace }}/.effeciency-benchmark.yml
  build:
    permissions:
      id-token: write
      contents: read
      actions: read
      checks: read
      deployments: read
      issues: none
      discussions: none
      packages: none
      pages: none
      pull-requests: none
      repository-projects: none
      security-events: none
      statuses: write

    runs-on: ubuntu-latest
    environment: ${{ inputs.gh_deploy_env }}
    needs: image-scan

    steps:
    - uses: actions/checkout@v3
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        role-to-assume: ${{ secrets.pipeline_role_arn }}
        aws-region: ${{ secrets.aws_region }}
    - name: Build the Docker image
      env:
        ECR_BASE_IMAGE_REGISTRY: ${{ secrets.ecr_base_image_registry }}
        ECR_FINAL_IMAGE_REGISTRY: ${{ secrets.ecr_final_image_registry }}
        AWS_REGION: ${{ secrets.aws_region }}
        IMAGE_NAME: ${{ secrets.image_name }}
      run: |
        aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $ECR_BASE_IMAGE_REGISTRY
        BRANCH_NAME=$(echo $GITHUB_REF_NAME | cut -d / -f 2)
        export IMAGE_TAG="$GITHUB_RUN_ID$(date '+%H%M%S')-$BRANCH_NAME"
        docker build . --file Dockerfile --tag $IMAGE_NAME
        docker build . --file Dockerfile --tag $ECR_FINAL_IMAGE_REGISTRY/$IMAGE_NAME:$IMAGE_TAG
        echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: ${{ secrets.IMAGE_NAME }}
        exit-code: '1'
        ignore-unfixed: true
        vuln-type: 'os,library'
        severity: ${{ inputs.trivy_severity }}